[gcode_macro TEST_CIRCLE]
# Example: TEST_CIRCLE SPEED=300 ACCEL=5000 ITERATIONS=10

description: Must Home first!!! Just a circular move

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Radius
    {% set radius  = params.RADIUS|default(70)|int %}


    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_CIRCLE: starting %d iterations at radius %d with speed %d, accel %d" % (iterations, radius, speed, accel)) }


    M117 Homing
    G28

    
    M117 Go to starting position
    G0 X-40 Y-{radius} Z75 F{speed*60}

    M400

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        M117 Huuuiiiiii!!!
        G3 X-40 Y-{radius} I40 J{radius} F{speed*60}
        
    {% endfor %}

    M400

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    M117 Homing
    G28

[gcode_macro LUBE_RAILS]
# Example: LUBE_RAILS SPEED=50 ACCEL=100 ITERATIONS=10

description: Must Home first!!! Just an up and down move

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}


    
    # Output parameters to g-code terminal
    { action_respond_info("LUBE_RAILS: starting %d up and down iterations with speed %d and accel %d" % (iterations, speed, accel)) }


    M117 Homing
    G28

    M400

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
       
        M117 Lubing them rails...
        
        G0 X0 Y0 Z10 F{speed*60}
        G0 X50 Y30 Z10 F{speed*60}
        G0 X-50 Y30 Z10 F{speed*60}
        G0 X0 Y-50 Z10 F{speed*60}
        G0 X0 Y0 Z10 F{speed*60}
        G0 Z150 F{speed*60}
        
    {% endfor %}

    M400

    
    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    M117 Homing
    G28
